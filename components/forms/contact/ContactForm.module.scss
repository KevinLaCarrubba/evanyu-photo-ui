.form {
    display: flex;
    flex-direction: column;

    padding: calc(4 * var(--size-bezel));
    margin-top: calc(4 * var(--size-bezel));
    border-radius: var(--size-radius);
    border: 3px solid var(--color-shadow, currentColor);
    box-shadow: 0.5rem 0.5rem 0 var(--color-shadow, currentColor);

    .formContent {
        .Input {
            padding-bottom: 2rem;
            position: relative;
        }

        .InputText {
            display: block;
            margin: 0;
            padding: var(--inputPaddingV) var(--inputPaddingH);
            color: black;
            width: 100%;
            font-family: inherit;

            font-weight: inherit;
            line-height: var(--inputLineHeight);
            border: 1px solid black;
            border-radius: 0.4rem;
            // transition: box-shadow var(--transitionDuration);
        }

        .InputText::placeholder {
            color: black;
        }

        .InputText:focus {
            outline: none;
            // box-shadow: 0.2rem 0.8rem 1.6rem black;
        }

        .InputLabel {
            display: block;
            position: absolute;
            bottom: 50%;
            left: 1rem;
            color: black;
            font-family: inherit;

            font-weight: inherit;
            // line-height: var(--inputLineHeight);
            opacity: 0;
            transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
            transform-origin: 0 0;
            transition: opacity var(--inputTransitionDuration)
                    var(--inputTransitionTF),
                transform var(--inputTransitionDuration)
                    var(--inputTransitionTF),
                visibility 0ms var(--inputTransitionDuration)
                    var(--inputTransitionTF),
                z-index 0ms var(--inputTransitionDuration)
                    var(--inputTransitionTF);
        }

        .InputText:placeholder-shown + .InputLabel {
            visibility: hidden;
            z-index: -1;
        }

        .InputText:not(:placeholder-shown) + .InputLabel,
        .InputText:focus:not(:placeholder-shown) + .InputLabel {
            visibility: visible;
            z-index: 1;
            opacity: 1;
            transform: translate3d(0, var(--labelTransformedPosY), 0)
                scale(var(--labelScaleFactor));
            transition: transform var(--inputTransitionDuration), visibility 0ms,
                z-index 0ms;
        }
    }

    .button {
        background-color: white;
        border: 2px solid black;
        border-radius: var(--size-radius);
        box-shadow: black 4px 4px 0 0;
        color: black;
        cursor: pointer;
        display: inline-block;
        font-weight: 600;
        font-size: 18px;
        padding: 0 18px;
        line-height: 50px;
        text-align: center;
        text-decoration: none;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

    .button:hover {
        background-color: #fff;
    }

    .button:active {
        box-shadow: black 2px 2px 0 0;
        transform: translate(2px, 2px);
    }

    @media (min-width: 768px) {
        .button {
            min-width: 120px;
            padding: 0 25px;
        }
    }
}

.socialLinks {
    display: none;
}

@media only screen and (max-width: 1000px) {
    .socialLinks {
        padding-top: 1rem;
        display: flex;
        column-gap: 1rem;
        .socialIcon {
            font-size: 2rem;
        }
    }
}
